-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sidedish
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sidedish
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sidedish` DEFAULT CHARACTER SET utf8 ;
USE `sidedish` ;

-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_USERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_USERS` (
   `ID` BIGINT NOT NULL AUTO_INCREMENT,
   `USER_ID` VARCHAR(45) NOT NULL,
    `USER_PASSWORD` VARCHAR(45) NOT NULL,
    `CREATED_AT` DATE NULL,
    `UPDATED_AT` DATE NULL,
    PRIMARY KEY (`ID`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_USER_OAUTH`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_USER_OAUTH` (
    `OAUTH_COMPANY` VARCHAR(50) NOT NULL,
    `OAUTH_USERS_ID` BIGINT NOT NULL,
    `ACCESS_TOKEN` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`OAUTH_COMPANY`, `OAUTH_USERS_ID`),
    INDEX `fk_SIDEDISH_USER_OAUTH_SIDEDISH_USERS_idx` (`OAUTH_USERS_ID` ASC) VISIBLE,
    CONSTRAINT `fk_SIDEDISH_USER_OAUTH_SIDEDISH_USERS`
    FOREIGN KEY (`OAUTH_USERS_ID`)
    REFERENCES `sidedish`.`SIDEDISH_USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_MENUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_MENUS` (
   `MENU_ID` BIGINT NOT NULL AUTO_INCREMENT,
   `MENU_NAME` VARCHAR(50) NOT NULL,
    `DESCRIPTION` VARCHAR(100) NOT NULL,
    `MENU_PRICE` DECIMAL NOT NULL,
    `MENU_CATEGORY` VARCHAR(10) NOT NULL COMMENT '메인, 국물, 반찬',
    `INVENTORY_QUANTITY` INT NOT NULL,
    PRIMARY KEY (`MENU_ID`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_ORDER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_ORDER` (
    `ORDER_ID` BIGINT NOT NULL AUTO_INCREMENT COMMENT '주문번호',
    `ORDER_QUANTITY` INT NOT NULL COMMENT '주문 수량',
    `ORDER_RESERVE_AMOUNT` INT NOT NULL COMMENT '주문시 적립금',
    `DELIVERY_INFORMATION` VARCHAR(100) NOT NULL COMMENT '\'배송정보(주소 등 - 임시)\'',
  `DELIVERY_CHARGE` BIGINT NOT NULL COMMENT '배송비',
  `ORDER_DATE` TIMESTAMP NOT NULL COMMENT '주문일자',
  `MENU_ID` BIGINT NOT NULL,
  `USERS_ID` BIGINT NOT NULL,
  INDEX `fk_SIDEDISH_ORDER_SIDEDISH_MENUS1_idx` (`MENU_ID` ASC) VISIBLE,
  INDEX `fk_SIDEDISH_ORDER_SIDEDISH_USERS1_idx` (`USERS_ID` ASC) VISIBLE,
  PRIMARY KEY (`ORDER_ID`),
  CONSTRAINT `fk_SIDEDISH_ORDER_SIDEDISH_MENUS1`
    FOREIGN KEY (`MENU_ID`)
    REFERENCES `sidedish`.`SIDEDISH_MENUS` (`MENU_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SIDEDISH_ORDER_SIDEDISH_USERS1`
    FOREIGN KEY (`USERS_ID`)
    REFERENCES `sidedish`.`SIDEDISH_USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_IMAGE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_IMAGE` (
    `MENU_IMAGE_URL` VARCHAR(300) NOT NULL,
    `IMAGE_MENU_ID` BIGINT NOT NULL,
    `IMAGE_FILE_TYPE` VARCHAR(10) NULL,
    `IMAGE_FILE_SIZE` INT NULL,
    `IMAGE_DEFAULT` TINYINT(1) NOT NULL DEFAULT 0,
    PRIMARY KEY (`MENU_IMAGE_URL`, `IMAGE_MENU_ID`),
    INDEX `fk_SIDEDISH_IMAGE_SIDEDISH_MENUS1_idx` (`IMAGE_MENU_ID` ASC) VISIBLE,
    CONSTRAINT `fk_SIDEDISH_IMAGE_SIDEDISH_MENUS1`
    FOREIGN KEY (`IMAGE_MENU_ID`)
    REFERENCES `sidedish`.`SIDEDISH_MENUS` (`MENU_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_EVENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_EVENTS` (
    `EVENT_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `EVENT_TITLE` VARCHAR(10) NOT NULL COMMENT '런칭특가, 이벤트특가',
    PRIMARY KEY (`EVENT_ID`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_SALE_POLICY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_SALE_POLICY` (
    `SALE_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `SALE_TITLE` VARCHAR(50) NOT NULL COMMENT "\'할인 카테고리 목록 중 하나\'",
    `SALE_AMOUNT` VARCHAR(45) NOT NULL COMMENT "\'할인액 - %, 금액 등\'",
    `EVENT_ID` BIGINT NOT NULL,
    PRIMARY KEY (`SALE_ID`),
    INDEX `fk_SIDEDISH_SALE_POLICY_SIDEDISH_EVENT_BADGE1_idx` (`EVENT_ID` ASC) VISIBLE,
    CONSTRAINT `fk_SIDEDISH_SALE_POLICY_SIDEDISH_EVENT_BADGE1`
    FOREIGN KEY (`EVENT_ID`)
    REFERENCES `sidedish`.`SIDEDISH_EVENTS` (`EVENT_ID`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_EXHIBITIONS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_EXHIBITIONS` (
    `EXHIBITION_ID` BIGINT NOT NULL AUTO_INCREMENT,
    `EXHIBITION_TITLE` VARCHAR(50) NOT NULL COMMENT "\'기획전 전체 제목\'",
    `EXHIBITION_START` DATE NOT NULL,
    `EXHIBITION_DURATION` INT NULL,
  PRIMARY KEY (`EXHIBITION_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_EVENT_PLANNER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_EVENT_PLANNER` (
   `MENU_ID` BIGINT NOT NULL,
   `EVENT_ID` BIGINT NOT NULL,
   `START_DATE` DATE NOT NULL COMMENT '런칭특가의 경우 메뉴 등록일 기준 30일 동안의 기간',
   `EVENT_DURATION` INT NOT NULL COMMENT '일단위',
   PRIMARY KEY (`MENU_ID`, `EVENT_ID`),
    INDEX `fk_SIDEDISH_MENUS_has_SIDEDISH_EVENT_BADGE_SIDEDISH_EVENT_B_idx` (`EVENT_ID` ASC) VISIBLE,
    INDEX `fk_SIDEDISH_MENUS_has_SIDEDISH_EVENT_BADGE_SIDEDISH_MENUS1_idx` (`MENU_ID` ASC) VISIBLE,
    CONSTRAINT `fk_SIDEDISH_MENUS_has_SIDEDISH_EVENT_BADGE_SIDEDISH_MENUS1`
    FOREIGN KEY (`MENU_ID`)
    REFERENCES `sidedish`.`SIDEDISH_MENUS` (`MENU_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_SIDEDISH_MENUS_has_SIDEDISH_EVENT_BADGE_SIDEDISH_EVENT_BAD1`
    FOREIGN KEY (`EVENT_ID`)
    REFERENCES `sidedish`.`SIDEDISH_EVENTS` (`EVENT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    )
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sidedish`.`SIDEDISH_SPECIAL_MENUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SIDEDISH_SPECIAL_MENUS` (
    `SPECIAL_TITLE` VARCHAR(20) NOT NULL,
    `MENU_ID` BIGINT NOT NULL,
    `EXHIBITIONS_ID` BIGINT NOT NULL,
    PRIMARY KEY (`SPECIAL_TITLE`, `MENU_ID`, `EXHIBITIONS_ID`),
    INDEX `fk_SIDEDISH_SPECIAL_MENUS_SIDEDISH_MENUS1_idx` (`MENU_ID` ASC) VISIBLE,
    INDEX `fk_SIDEDISH_SPECIAL_MENUS_SIDEDISH_EXHIBITIONS1_idx` (`EXHIBITIONS_ID` ASC) VISIBLE,
    CONSTRAINT `fk_SIDEDISH_SPECIAL_MENUS_SIDEDISH_MENUS1`
    FOREIGN KEY (`MENU_ID`)
    REFERENCES `sidedish`.`SIDEDISH_MENUS` (`MENU_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_SIDEDISH_SPECIAL_MENUS_SIDEDISH_EXHIBITIONS1`
    FOREIGN KEY (`EXHIBITIONS_ID`)
    REFERENCES `sidedish`.`SIDEDISH_EXHIBITIONS` (`EXHIBITION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


ALTER TABLE SIDEDISH_EXHIBITIONS ADD INDEX LATEST_START_AT_INDEX (EXHIBITION_START);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
